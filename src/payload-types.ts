/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {
    Code: Code;
    CodeTabs: CodeTabs;
  };
  collections: {
    users: User;
    media: Media;
    experiences: Experience;
    projects: Project;
    'blog-posts': BlogPost;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    experiences: ExperiencesSelect<false> | ExperiencesSelect<true>;
    projects: ProjectsSelect<false> | ProjectsSelect<true>;
    'blog-posts': BlogPostsSelect<false> | BlogPostsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    about: About;
    contact: Contact;
  };
  globalsSelect: {
    about: AboutSelect<false> | AboutSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Code".
 */
export interface Code {
  language?:
    | (
        | 'abap'
        | 'abnf'
        | 'actionscript'
        | 'ada'
        | 'agda'
        | 'al'
        | 'antlr4'
        | 'apacheconf'
        | 'apex'
        | 'apl'
        | 'applescript'
        | 'aql'
        | 'arduino'
        | 'arff'
        | 'asciidoc'
        | 'asm6502'
        | 'asmatmel'
        | 'aspnet'
        | 'autohotkey'
        | 'autoit'
        | 'avisynth'
        | 'avro-idl'
        | 'bash'
        | 'basic'
        | 'batch'
        | 'bbcode'
        | 'bicep'
        | 'birb'
        | 'bison'
        | 'bnf'
        | 'brainfuck'
        | 'brightscript'
        | 'bro'
        | 'bsl'
        | 'c'
        | 'cfscript'
        | 'chaiscript'
        | 'cil'
        | 'clike'
        | 'clojure'
        | 'cmake'
        | 'cobol'
        | 'coffeescript'
        | 'concurnas'
        | 'coq'
        | 'cpp'
        | 'crystal'
        | 'csharp'
        | 'cshtml'
        | 'csp'
        | 'css-extras'
        | 'css'
        | 'csv'
        | 'cypher'
        | 'd'
        | 'dart'
        | 'dataweave'
        | 'dax'
        | 'dhall'
        | 'diff'
        | 'django'
        | 'dns-zone-file'
        | 'docker'
        | 'dot'
        | 'ebnf'
        | 'editorconfig'
        | 'eiffel'
        | 'ejs'
        | 'elixir'
        | 'elm'
        | 'erb'
        | 'erlang'
        | 'etlua'
        | 'excel-formula'
        | 'factor'
        | 'false'
        | 'firestore-security-rules'
        | 'flow'
        | 'fortran'
        | 'fsharp'
        | 'ftl'
        | 'gap'
        | 'gcode'
        | 'gdscript'
        | 'gedcom'
        | 'gherkin'
        | 'git'
        | 'glsl'
        | 'gml'
        | 'gn'
        | 'go-module'
        | 'go'
        | 'graphql'
        | 'groovy'
        | 'haml'
        | 'handlebars'
        | 'haskell'
        | 'haxe'
        | 'hcl'
        | 'hlsl'
        | 'hoon'
        | 'hpkp'
        | 'hsts'
        | 'http'
        | 'ichigojam'
        | 'icon'
        | 'icu-message-format'
        | 'idris'
        | 'iecst'
        | 'ignore'
        | 'inform7'
        | 'ini'
        | 'io'
        | 'j'
        | 'java'
        | 'javadoc'
        | 'javadoclike'
        | 'javascript'
        | 'javastacktrace'
        | 'jexl'
        | 'jolie'
        | 'jq'
        | 'js-extras'
        | 'js-templates'
        | 'jsdoc'
        | 'json'
        | 'json5'
        | 'jsonp'
        | 'jsstacktrace'
        | 'jsx'
        | 'julia'
        | 'keepalived'
        | 'keyman'
        | 'kotlin'
        | 'kumir'
        | 'kusto'
        | 'latex'
        | 'latte'
        | 'less'
        | 'lilypond'
        | 'liquid'
        | 'lisp'
        | 'livescript'
        | 'llvm'
        | 'log'
        | 'lolcode'
        | 'lua'
        | 'magma'
        | 'makefile'
        | 'markdown'
        | 'markup-templating'
        | 'markup'
        | 'matlab'
        | 'maxscript'
        | 'mel'
        | 'mermaid'
        | 'mizar'
        | 'mongodb'
        | 'monkey'
        | 'moonscript'
        | 'n1ql'
        | 'n4js'
        | 'nand2tetris-hdl'
        | 'naniscript'
        | 'nasm'
        | 'neon'
        | 'nevod'
        | 'nginx'
        | 'nim'
        | 'nix'
        | 'nsis'
        | 'objectivec'
        | 'ocaml'
        | 'opencl'
        | 'openqasm'
        | 'oz'
        | 'parigp'
        | 'parser'
        | 'pascal'
        | 'pascaligo'
        | 'pcaxis'
        | 'peoplecode'
        | 'perl'
        | 'php-extras'
        | 'php'
        | 'phpdoc'
        | 'plsql'
        | 'powerquery'
        | 'powershell'
        | 'processing'
        | 'prolog'
        | 'promql'
        | 'properties'
        | 'protobuf'
        | 'psl'
        | 'pug'
        | 'puppet'
        | 'pure'
        | 'purebasic'
        | 'purescript'
        | 'python'
        | 'q'
        | 'qml'
        | 'qore'
        | 'qsharp'
        | 'r'
        | 'racket'
        | 'reason'
        | 'regex'
        | 'rego'
        | 'renpy'
        | 'rest'
        | 'rip'
        | 'roboconf'
        | 'robotframework'
        | 'ruby'
        | 'rust'
        | 'sas'
        | 'sass'
        | 'scala'
        | 'scheme'
        | 'scss'
        | 'shell-session'
        | 'smali'
        | 'smalltalk'
        | 'smarty'
        | 'sml'
        | 'solidity'
        | 'solution-file'
        | 'soy'
        | 'sparql'
        | 'splunk-spl'
        | 'sqf'
        | 'sql'
        | 'squirrel'
        | 'stan'
        | 'stylus'
        | 'swift'
        | 'systemd'
        | 't4-cs'
        | 't4-templating'
        | 't4-vb'
        | 'tap'
        | 'tcl'
        | 'textile'
        | 'toml'
        | 'tremor'
        | 'tsx'
        | 'tt2'
        | 'turtle'
        | 'twig'
        | 'typescript'
        | 'typoscript'
        | 'unrealscript'
        | 'uorazor'
        | 'uri'
        | 'v'
        | 'vala'
        | 'vbnet'
        | 'velocity'
        | 'verilog'
        | 'vhdl'
        | 'vim'
        | 'visual-basic'
        | 'warpscript'
        | 'wasm'
        | 'web-idl'
        | 'wiki'
        | 'wolfram'
        | 'wren'
        | 'xeora'
        | 'xml-doc'
        | 'xojo'
        | 'xquery'
        | 'yaml'
        | 'yang'
        | 'zig'
      )
    | null;
  code?: string | null;
  highlightLines?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'Code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeTabs".
 */
export interface CodeTabs {
  files?:
    | {
        filename?: string | null;
        language?:
          | (
              | 'abap'
              | 'abnf'
              | 'actionscript'
              | 'ada'
              | 'agda'
              | 'al'
              | 'antlr4'
              | 'apacheconf'
              | 'apex'
              | 'apl'
              | 'applescript'
              | 'aql'
              | 'arduino'
              | 'arff'
              | 'asciidoc'
              | 'asm6502'
              | 'asmatmel'
              | 'aspnet'
              | 'autohotkey'
              | 'autoit'
              | 'avisynth'
              | 'avro-idl'
              | 'bash'
              | 'basic'
              | 'batch'
              | 'bbcode'
              | 'bicep'
              | 'birb'
              | 'bison'
              | 'bnf'
              | 'brainfuck'
              | 'brightscript'
              | 'bro'
              | 'bsl'
              | 'c'
              | 'cfscript'
              | 'chaiscript'
              | 'cil'
              | 'clike'
              | 'clojure'
              | 'cmake'
              | 'cobol'
              | 'coffeescript'
              | 'concurnas'
              | 'coq'
              | 'cpp'
              | 'crystal'
              | 'csharp'
              | 'cshtml'
              | 'csp'
              | 'css-extras'
              | 'css'
              | 'csv'
              | 'cypher'
              | 'd'
              | 'dart'
              | 'dataweave'
              | 'dax'
              | 'dhall'
              | 'diff'
              | 'django'
              | 'dns-zone-file'
              | 'docker'
              | 'dot'
              | 'ebnf'
              | 'editorconfig'
              | 'eiffel'
              | 'ejs'
              | 'elixir'
              | 'elm'
              | 'erb'
              | 'erlang'
              | 'etlua'
              | 'excel-formula'
              | 'factor'
              | 'false'
              | 'firestore-security-rules'
              | 'flow'
              | 'fortran'
              | 'fsharp'
              | 'ftl'
              | 'gap'
              | 'gcode'
              | 'gdscript'
              | 'gedcom'
              | 'gherkin'
              | 'git'
              | 'glsl'
              | 'gml'
              | 'gn'
              | 'go-module'
              | 'go'
              | 'graphql'
              | 'groovy'
              | 'haml'
              | 'handlebars'
              | 'haskell'
              | 'haxe'
              | 'hcl'
              | 'hlsl'
              | 'hoon'
              | 'hpkp'
              | 'hsts'
              | 'http'
              | 'ichigojam'
              | 'icon'
              | 'icu-message-format'
              | 'idris'
              | 'iecst'
              | 'ignore'
              | 'inform7'
              | 'ini'
              | 'io'
              | 'j'
              | 'java'
              | 'javadoc'
              | 'javadoclike'
              | 'javascript'
              | 'javastacktrace'
              | 'jexl'
              | 'jolie'
              | 'jq'
              | 'js-extras'
              | 'js-templates'
              | 'jsdoc'
              | 'json'
              | 'json5'
              | 'jsonp'
              | 'jsstacktrace'
              | 'jsx'
              | 'julia'
              | 'keepalived'
              | 'keyman'
              | 'kotlin'
              | 'kumir'
              | 'kusto'
              | 'latex'
              | 'latte'
              | 'less'
              | 'lilypond'
              | 'liquid'
              | 'lisp'
              | 'livescript'
              | 'llvm'
              | 'log'
              | 'lolcode'
              | 'lua'
              | 'magma'
              | 'makefile'
              | 'markdown'
              | 'markup-templating'
              | 'markup'
              | 'matlab'
              | 'maxscript'
              | 'mel'
              | 'mermaid'
              | 'mizar'
              | 'mongodb'
              | 'monkey'
              | 'moonscript'
              | 'n1ql'
              | 'n4js'
              | 'nand2tetris-hdl'
              | 'naniscript'
              | 'nasm'
              | 'neon'
              | 'nevod'
              | 'nginx'
              | 'nim'
              | 'nix'
              | 'nsis'
              | 'objectivec'
              | 'ocaml'
              | 'opencl'
              | 'openqasm'
              | 'oz'
              | 'parigp'
              | 'parser'
              | 'pascal'
              | 'pascaligo'
              | 'pcaxis'
              | 'peoplecode'
              | 'perl'
              | 'php-extras'
              | 'php'
              | 'phpdoc'
              | 'plsql'
              | 'powerquery'
              | 'powershell'
              | 'processing'
              | 'prolog'
              | 'promql'
              | 'properties'
              | 'protobuf'
              | 'psl'
              | 'pug'
              | 'puppet'
              | 'pure'
              | 'purebasic'
              | 'purescript'
              | 'python'
              | 'q'
              | 'qml'
              | 'qore'
              | 'qsharp'
              | 'r'
              | 'racket'
              | 'reason'
              | 'regex'
              | 'rego'
              | 'renpy'
              | 'rest'
              | 'rip'
              | 'roboconf'
              | 'robotframework'
              | 'ruby'
              | 'rust'
              | 'sas'
              | 'sass'
              | 'scala'
              | 'scheme'
              | 'scss'
              | 'shell-session'
              | 'smali'
              | 'smalltalk'
              | 'smarty'
              | 'sml'
              | 'solidity'
              | 'solution-file'
              | 'soy'
              | 'sparql'
              | 'splunk-spl'
              | 'sqf'
              | 'sql'
              | 'squirrel'
              | 'stan'
              | 'stylus'
              | 'swift'
              | 'systemd'
              | 't4-cs'
              | 't4-templating'
              | 't4-vb'
              | 'tap'
              | 'tcl'
              | 'textile'
              | 'toml'
              | 'tremor'
              | 'tsx'
              | 'tt2'
              | 'turtle'
              | 'twig'
              | 'typescript'
              | 'typoscript'
              | 'unrealscript'
              | 'uorazor'
              | 'uri'
              | 'v'
              | 'vala'
              | 'vbnet'
              | 'velocity'
              | 'verilog'
              | 'vhdl'
              | 'vim'
              | 'visual-basic'
              | 'warpscript'
              | 'wasm'
              | 'web-idl'
              | 'wiki'
              | 'wolfram'
              | 'wren'
              | 'xeora'
              | 'xml-doc'
              | 'xojo'
              | 'xquery'
              | 'yaml'
              | 'yang'
              | 'zig'
            )
          | null;
        code?: string | null;
        highlightLines?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'CodeTabs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experiences".
 */
export interface Experience {
  id: number;
  start?: string | null;
  end?: string | null;
  title?: string | null;
  company?: string | null;
  description?: string | null;
  link?: string | null;
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: number;
  title?: string | null;
  description?: string | null;
  order?: number | null;
  link?: string | null;
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts".
 */
export interface BlogPost {
  id: number;
  title?: string | null;
  slug: string;
  summary?: string | null;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'experiences';
        value: number | Experience;
      } | null)
    | ({
        relationTo: 'projects';
        value: number | Project;
      } | null)
    | ({
        relationTo: 'blog-posts';
        value: number | BlogPost;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experiences_select".
 */
export interface ExperiencesSelect<T extends boolean = true> {
  start?: T;
  end?: T;
  title?: T;
  company?: T;
  description?: T;
  link?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects_select".
 */
export interface ProjectsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  order?: T;
  link?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts_select".
 */
export interface BlogPostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  summary?: T;
  text?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: number;
  summary?: string | null;
  text?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  links?:
    | {
        type: 'linkedin' | 'reddit' | 'gitea' | 'github' | 'email' | 'bluesky';
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  summary?: T;
  text?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  links?:
    | T
    | {
        type?: T;
        url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}